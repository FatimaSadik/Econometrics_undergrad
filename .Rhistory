install.packages(systemfit)
install.packages("systemfit")
install.packages(PoEdata)
install.packages("remotes")
remotes::install_github("ccolonescu/PoEdata")
library(systemfit)
library(PoEdata)
data("truffles")
View(truffles)
View(truffles)
#reduced form equations
rf_p<-lm(p~ps+di+pf,data=truffles)
rf_q<-lm(q~ps+di+pf,data=truffles)
summary(rf_p)
summary(rf_q)
truffles$p_hat<-fitted.values$rf_p
truffles$p_hat<-fitted.values(rf_p)
truffles$q_hat<-fitted.values(rf_q)
#2nd stage
seq_1<-lm(q_hat~p_hat+ps+di,data=truffles)
summary(seq_1)
#2nd stage
seq_1<-lm(q~p_hat+ps+di,data=truffles)
summary(seq_1)
seq_2<-lm(q_hat~p+pf,data=truffles)
summary(seq_2)
seq_2<-lm(q~p_hat+pf,data=truffles)
summary(seq_2)
D <- q~p+ps+di
S <- q~p+pf
sys <- list(D,S)
View(sys)
instr <- ~ps+di+pf
truff.sys <- systemfit(sys, inst=instr,
method="2SLS", data=truffles)
summary(truff.sys)
install.packages("systemfit")
install.packages("remotes")
remotes::install_github("ccolonescu/PoEdata")
library(systemfit)
library(PoEdata)
data("truffles")
#reduced form equations/first stage
rf_p<-lm(p~ps+di+pf,data=truffles)
rf_q<-lm(q~ps+di+pf,data=truffles)
summary(rf_p)
summary(rf_q)
truffles$p_hat<-fitted.values(rf_p)
truffles$q_hat<-fitted.values(rf_q)
#2nd stage
seq_1<-lm(q~p_hat+ps+di,data=truffles)
summary(seq_1)
seq_2<-lm(q~p_hat+pf,data=truffles)
summary(seq_2)
#ALTERNATIVELY
D <- q~p+ps+di
S <- q~p+pf
sys <- list(D,S)
instr <- ~ps+di+pf
truff.sys <- systemfit(sys, inst=instr,
method="2SLS", data=truffles)
install.packages("remotes")
# elasticity
truffles$ln_p<-log(truffles$p)
truffles$ln_q<-log(truffles$q)
D1 <- ln_q~ln_p+ps+di
S1 <- ln_q~ln_p+pf
sys1 <- list(D1,S1)
instr1 <- ~ps+di+pf
truff.sys1 <- systemfit(sys1, inst=instr1,
method="2SLS", data=truffles)
library(systemfit)
D1 <- ln_q~ln_p+ps+di
S1 <- ln_q~ln_p+pf
sys1 <- list(D1,S1)
instr1 <- ~ps+di+pf
truff.sys1 <- systemfit(sys1, inst=instr1,
method="2SLS", data=truffles)
summary(truff.sys1)
View(truffles)
View(truffles)
summary(seq_1)
summary(seq_2)
truffles$ln_p<-log(truffles$p)
truffles$ln_q<-log(truffles$q)
D1 <- ln_p~ln_q+ps+di
S1 <- ln_p~ln_q+pf
sys1 <- list(D1,S1)
instr1 <- ~ps+di+pf
truff.sys1 <- systemfit(sys1, inst=instr1,
method="2SLS", data=truffles)
summary(truff.sys1)
install.packages("remotes")
remotes::install_github("ccolonescu/PoEdata")
install.packages("remotes")
install.packages("remotes")
install.packages("remotes")
library(PoEdata)
data("coke")
head(coke)
lpm<-lm(coke~pratio+disp_coke,data=coke)
summary(lpm)
hist(fitted.values(lpm))
#negative predicted probabilities
?glm
logit<-glm(coke~pratio+disp_coke, data=coke, family ="binomial")
summary(logit)
lpm<-lm(coke~pratio+disp_coke+disp_pepsi,data=coke)
logit<-glm(coke~pratio+disp_coke+disp_pepsi, data=coke, family ="binomial")
summary(logit)
logit<-glm(coke~pratio+disp_coke+disp_pepsi, data=coke, family =binomial(link="logit"))
summary(logit)
probit<-glm(coke~pratio+disp_coke+disp_pepsi, data=coke, family =binomial(link="probit"))
summary(probit)
library(broom)
library(officer)
install.packages(broom)
install.packages("broom")
install.packages("broom")
install.packages("flextable")
install.packages("flextable")
library(broom)
library(officer)
library(flextable)
results <- bind_rows(
glance(lpm) %>% mutate(model = "lpm"),
glance(logit) %>% mutate(model = "logit"),
glance(probit) %>% mutate(model = "probit")
)
library(dplyr)
results <- bind_rows(
glance(lpm) %>% mutate(model = "lpm"),
glance(logit) %>% mutate(model = "logit"),
glance(probit) %>% mutate(model = "probit")
)
ft <- flextable(results)
doc <- read_docx()
doc <- doc %>%
body_add_flextable(ft) %>%
print(target = "lpm_probit_logit.docx")
coefficients <- coef(logit)
# Calculate odds ratios
odds_ratios <- exp(coefficients)
# Print or display the odds ratios
print(odds_ratios)
marginal_effects<-margins(logit)
install.packages("margins")
library(margins)
marginal_effects<-margins(logit)
summary(marginal_effects)
View(marginal_effects)
marginal_effects_mean <- margins(logit, at = "mean")
at_mean <- list(
"p_ratio" = mean(coke$pratio),
"disp_pepsi" = mean(coke$disp_pepsi),
"disp_coke" = mean(coke$disp_coke)
)
marginal_effects_mean <- margins(logit, at = "mean")
library(stargazer)
stargazer(lpm,logit,probit, type="html", out="all.htm")
stargazer(lpm,logit,probit, type="text", out="all.htm")
allmean <- data.frame(pratio=mean(coke$pratio),
disp_pepsi=1,
disp_coke=1)
allmean
allmean$pred.prob <- predict(logit, newdata=allmean, type="response")
allmean
install.packages("mfx") #Do this only once
library(mfx)
logitmfx(coke~~pratio+disp_coke+disp_pepsi, data=coke)
logitmfx(coke~pratio+disp_coke+disp_pepsi, data=coke)
?mfx
?logitmfx
?probitmfx
matmean_logit<-logitmfx(coke~pratio+disp_coke+disp_pepsi, data=coke)
matmean_probit<-probitmfx(coke~pratio+disp_coke+disp_pepsi, data=coke)
View(matmean_logit)
View(matmean_logit)
logit<-glm(coke~pratio+disp_coke+disp_pepsi, data=coke, family =binomial(link="logit"))
install.packages("remotes")
remotes::install_github("ccolonescu/PoEdata")
library(PoEdata)
library(stargazer)
install.packages("stargazer")
data("coke")
head(coke)
lpm<-lm(coke~pratio+disp_coke+disp_pepsi,data=coke)
install.packages("remotes")
install.packages("remotes")
summary(lpm)
logit<-glm(coke~pratio+disp_coke+disp_pepsi, data=coke, family =binomial(link="logit"))
summary(logit)
probit<-glm(coke~pratio+disp_coke+disp_pepsi, data=coke, family =binomial(link="probit"))
summary(probit)
stargazer(lpm,logit,probit, type="text", out="all.htm")
allmean <- data.frame(pratio=mean(coke$pratio),
disp_pepsi=1,
disp_coke=1)
allmean
allmean$pred.prob <- predict(logit, newdata=allmean, type="response")
allmean
install.packages("mfx")
library(mfx)
matmean_logit<-logitmfx(coke~pratio+disp_coke+disp_pepsi, data=coke)
matmean_logit
matmean_probit<-probitmfx(coke~pratio+disp_coke+disp_pepsi, data=coke)
matmean_probit
